#include<stdio.h>

#define m 12
#define n 3

typedef struct
{
    int key;
}mstack;

mstack s[10];
int top[5],b[5];

void push(int i,mstack item)
{
    if(top[i]==b[i+1])
     printf("stack is full\n");
    else
        s[++top[i]]=item;
}

mstack pop(int i)
{
    mstack temp;
    if(top[i]==b[i])
    {
        printf("\nStack empty\n");
        temp.key=-9999;
        return temp;
    }
    else
        return s[top[i]--];
}

void display(int i)
{
    int j;
    if(top[i]==b[i])
        printf("\nStack is empty\n");
    else
    {
        printf("\nThe stack is:\n");
        for(j=b[i]+1;j<=top[i];j++)
            printf("%d\t",s[j].key);
    }
}

int main()
{
    int i,c;
    mstack ele;
    for(i=0;i<n;i++)
        top[i]=b[i]=(m/n)*i-1;
    b[i]=m-1;
    printf("1.Push an element\n2.Pop\n3.Display the specific stack\n4.Exit\n");
    do
    {
        printf("\nEnter choice:");
        scanf("%d",&c);
        switch(c)
        {
        case 1:
            {
                printf("\nEnter the stack number and element to be pushed:\n");
                scanf("%d%d",&i,&ele.key);
                push(i,ele);
                break;
            }
        case 2:
            {
                printf("\nEnter the stack number:\n");
                scanf("%d",&i);
                ele=pop(i);
                printf("\nThe element popped is:%d",ele.key);
                break;
            }
        case 3:
            {
                printf("\nEnter the stack number:\n");
                scanf("%d",&i);
                display(i);
                break;
            }
        }

    }while(c!=4);
}

#include <stdio.h>
#include <string.h>

#define MAX 20

int top = -1;
char stack[MAX];

void push(char ele) {
    if (top == MAX - 1) {
        printf("\nStack is full\n");
        printf("\nParenthesis not matching");
    } else {
        stack[++top] = ele;
    }
}

char pop() {
    if (top == -1) {
        return '#';
    } else {
        return stack[top--];
    }
}

int main() {
    int flag = 1;
    char expression[MAX];
    int i = 0;

    printf("Enter the expression: ");
    gets(expression);

    while (expression[i] != '\0') {
        char current = expression[i];
        if (current == '(' || current == '[' || current == '{') {
            push(current);
        } else if (current == ')' || current == ']' || current == '}') {
            char popped = pop();
            if (popped == '#' ||
                (current == ')' && popped != '(') ||
                (current == ']' && popped != '[') ||
                (current == '}' && popped != '{')) {
                flag = 0;
                break;
            }
        }
        i++;
    }

    if (top != -1) {
        flag = 0;
    }

    if (flag) {
        printf("Parenthesis matching");
    } else {
        printf("Parenthesis not matching");
    }

    return 0;
}

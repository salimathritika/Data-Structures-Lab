#include <stdio.h>
#include <stdlib.h>

typedef struct  {
    int data;
    struct TreeNode* left;
    struct TreeNode* right;
}tree;

tree* createNode(int data) {
    tree* newNode = (tree*)malloc(sizeof(tree));
    newNode->data = data;
    newNode->left = newNode->right = NULL;
    return newNode;
}

tree* insertNode(tree* root, int data) {
    if (root == NULL) {
        return createNode(data);
    }

    if (data < root->data) {
        root->left = insertNode(root->left, data);
    } else if (data > root->data) {
        root->right = insertNode(root->right, data);
    }

    return root;
}

void inorder(tree *root)
{
    if (root != NULL)
    {
        inorder(root->left);
        printf("%d ", root->data);
        inorder(root->right);
    }
}

int main() {
    tree* root = NULL;
        int n, data;

    printf("Enter the number of nodes: ");
    scanf("%d", &n);

    printf("Enter the elements:\n");
    for (int i = 0; i < n; ++i) {
        scanf("%d", &data);
        root = insertNode(root, data);
    }

    printf("Inorder Traversal: ");
    inorder(root);

    return 0;
}


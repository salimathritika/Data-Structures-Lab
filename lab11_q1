//WORKS
#include<stdio.h>
#include<stdlib.h>

typedef struct
{
    int data;
    struct bst *lchild;
    struct bst *rchild;
}bst;

bst *root=NULL;

void create(int n)
{
    int key,flag=0;
    bst *curr=root;
    while(n>0)
    {
        printf("Enter element:");
        scanf("%d",&key);
        bst *temp=(bst*)malloc(sizeof(bst));
        temp->data=key;
        temp->rchild=NULL;
        temp->lchild=NULL;
        curr=root;
        while(curr!=NULL)
        {
            if(curr->data>key)
                curr=curr->lchild;
            else if(curr->data<key)
                curr=curr->rchild;
            else
            {
                printf("This element already exists");
                flag=1;
                break;
            }
        }
        if(flag==0)
            curr=temp;
        n--;
    }
}

void inorder(bst *r)
{
    if (r != NULL)
    {
        inorder(r->lchild);
        printf("%d ", r->data);
        inorder(r->rchild);
    }
}

int main()
{
    int n;
    printf("Enter the total number of nodes:");
    scanf("%d",&n);
    create(n);
    printf("\nTree is created");

    printf("\nInorder traversal of tree:");
    inorder(root);

}
